library(lpSolve)
?lpSolve
?lp
library(lpSolve)
library(lpSolve)
costs <- matrix (10000, 8, 5); costs[4,1] <- costs[-4,5] <- 0
costs[1,2] <- costs[2,3] <- costs[3,4] <- 7; costs[1,3] <- costs[2,4] <- 7.7
costs[5,1] <- costs[7,3] <- 8; costs[1,4] <- 8.4; costs[6,2] <- 9
costs[8,4] <- 10; costs[4,2:4] <- c(.7, 1.4, 2.1)
#
# Set up constraint signs and right-hand sides.
#
row.signs <- rep ("<", 8)
row.rhs <- c(200, 300, 350, 200, 100, 50, 100, 150)
col.signs <- rep (">", 5)
col.rhs <- c(250, 100, 400, 500, 200)
#
# Run
#
lp.transport (costs, "min", row.signs, row.rhs, col.signs, col.rhs)
## Not run: Success: the objective function is 7790
lp.transport (costs, "min", row.signs, row.rhs, col.signs, col.rhs)$solution
library(lpSolve)
origin_dest <- function(n_origin = 1, n_dest = 1) {
map2(
n_origin,
n_dest,
function(destinations, origins) {
print(destinations, origins)
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
map2(
n_origin,
n_dest,
function(destinations, origins) {
print(destinations, origins)
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
pmap(
list(
destinations = n_origin,
origins = n_dest
)
function(destinations, origins) {
print(destinations, origins)
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
pmap(
list(
destinations = n_origin,
origins = n_dest
),
function(destinations, origins) {
print(destinations, origins)
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
pmap(
list(
destinations = n_origin,
origins = n_dest
),
function(destinations, origins) {
print(c(destinations, origins))
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
pmap(
list(
destinations = n_origin,
origins = n_dest
),
function(destinations, origins) {
message(c(destinations, origins))
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
pmap(
list(
destinations = n_origin,
origins = n_dest
),
function(destinations, origins) {
message(destinations, origins)
}
)
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
origin_dest <- function(n_origin = 1, n_dest = 1) {
diag(rep(n_origin, n_dest))
}
origin_dest(2, 4)
rep(2, 4)
rep(1, 4)
eye(rep(1, 4))
eye(rep(1, 4), 2)
diag(c(1, 1, 1, 1))
diag(c(1, 1, 1, 1), nrow = 1)
diag?
?diag
diag(c(1, 4))
diag(c(1, 4, 5))
diag(matrix(c(1:4)))
diag(matrix(c(1:4), nrow = 1))
library(Matrix)
Matrix::diag(c(1:10))
Matrix::Diagonal(1:10, 5)
diag(1:4, 5)
diag(1:4, 10)
diag(matric(c(1:4), nrow = 2), 10)
diag(matrix(c(1:4), nrow = 2), 10)
replicate(2, diag(3))
?Diagonal
kronecker(Diagonal(3), M1))
?kronecker
install.packages("diagonals")
library(diagonals)
?diagonals::fatdiag
fatdiag(12, steps=3)
library(lpSolve)
library(purrr)
library(Matrix)
origin_dest <- function(n_origin = 1, n_dest = 1) {
diagonals::fatdiag(n_origin, n_dest)
}
origin_dest(2, 4)
library(diagonals)
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
diagonals::fatdiag(n_origin, n_dest)
}
origin_dest(2, 4)
matrix(111, nrow=6, ncol=9)
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
matrix(1, nrow=n_origin, ncol=n_dest) %>%
diagonals::fatdiag(n_origin, n_dest)
}
origin_dest(2, 4)
n_origin=2
n_dest = 4
matrix(1, nrow=n_origin, ncol=n_dest)
matrix(1, nrow=1, ncol=n_dest)
fatdiag(matrix(1, nrow=1, ncol=n_dest), n_origin)
fatdiag(matrix(1, nrow=1, ncol=n_dest), 4)
fatdiag(matrix(1, nrow=1, ncol=n_dest), 4a)
fatdiag(12, steps=3)
( m <- matrix(111, nrow=6, ncol=9) )
fatdiag(m, steps=3) <- 5
fatdiag(12, steps=3)
fatdiag(rep(1, 4), steps=3)
?diagonals::split_vector
fatdiag(matrix(rep(1, 4)), steps=3)
?fatdiag
fatdiag(12, size=4)
fatdiag(12, size=c(3,4) )
fatdiag(12, size=4)
fatdiag(12, size=c(1,4) )
fatdiag(12, size=4)
fatdiag(1:4, size=c(1,4))
fatdiag(12, size=4)
fatdiag(1:4, size=c(3,4))
fatdiag(12, size=4)
fatdiag(1:4, size=c(2,4))
fatdiag(12, size=4)
fatdiag(matrix(1:4, nrow = 1), size=c(2,4))
fatdiag(1, steps=n_origin, size = c(n_origin, n_dest))
fatdiag(12, size=4)
fatdiag(12, size=c(3,4) )
fatdiag(12, size=4)
fatdiag(12, size=c(1,4) )
fatdiag(12, size=4)
fatdiag(1, size=c(1,4))
fatdiag(12, size=4)
fatdiag(12, size=c(1,4))
fatdiag(12, size=4)
fatdiag(n_origin*n_dest, size=c(1,n_dest))
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
fatdiag(n_origin*n_dest, size=c(1,n_dest))
}
origin_dest(2, 4)
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
fatdiag(n_origin*n_dest, size=c(1,n_dest))
}
origin_dest(2, 8)
diag(1, n_dest)
diag(1, n_origin*n_dest)
rbind(origin_dest(2, 8), cbind(from_to, from_to))
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
fatdiag(n_origin*n_dest, size=c(1,n_dest))
}
origin_dest(2, 8)
from_to = diag(1, n_origin*n_dest)
rbind(origin_dest(2, 8), cbind(from_to, from_to))
library(lpSolve)
library(purrr)
library(Matrix)
library(diagonals)
origin_dest <- function(n_origin = 1, n_dest = 1) {
rbind(fatdiag(n_origin*n_dest, size=c(1,n_dest)), cbind(from_to, from_to))
}
n_origin = 2
n_dest = 8
origin_dest(2, 8)
?spread
library(tidyr)
?spread
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
s
